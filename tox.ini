# Copyright 2024 Canonical Limited
# See LICENSE file for licensing details.

[tox]
no_package = True
skip_missing_interpreters = True
env_list = lint, unit

[vars]
application = kyuubi-k8s
src_path = {tox_root}/src
tests_path = {tox_root}/tests
all_path = {[vars]src_path} {[vars]tests_path}

[testenv]
allowlist_externals =
    /bin/bash
    poetry

set_env =
    PYTHONPATH = {tox_root}/lib:{[vars]src_path}
    PYTHONBREAKPOINT=ipdb.set_trace
    PY_COLORS=1
    charm: TESTFILE=test_charm.py
pass_env =
    PYTHONPATH
    CHARM_BUILD_DIR
    MODEL_SETTINGS
deps =
    poetry

[testenv:format]
description = Apply coding style standards to code
commands =
    poetry install
    poetry export -f requirements.txt -o requirements.txt --without-hashes

    poetry install --only format
    poetry run ruff --fix {[vars]all_path}
    poetry run black {[vars]all_path}

[testenv:lint]
description = Check code against coding style standards
commands =
    poetry install --only lint
    poetry run codespell {tox_root} \
        --skip {tox_root}/poetry.lock \
        --skip {tox_root}/.git \
        --skip {tox_root}/.tox \
        --skip {tox_root}/build \
        --skip {tox_root}/lib \
        --skip {tox_root}/venv \
        --skip {tox_root}/env \
        --skip {tox_root}/.mypy_cache \
        --skip {tox_root}/icon.svg 

    poetry run ruff {[vars]all_path}
    poetry run black --check --diff {[vars]all_path}


[testenv:unit]
description = Run unit tests
commands =
    poetry install --with unit
    poetry run coverage run --source={[vars]src_path} \
        -m pytest -vv --tb native -s {posargs} {[vars]tests_path}/unit
    poetry run coverage report


[testenv:refresh]
description = Short refresh script for charm-dev
commands =
    /bin/bash -ec "charmcraft pack"
    /bin/bash -ec "juju refresh kyuubi-k8s --path=./kyuubi-k8s_ubuntu-22.04-amd64.charm --resource kyuubi-image=ghcr.io/canonical/charmed-spark:3.4-22.04_edge --trust"



; [testenv:integration]
; description = Run integration tests
; set_env =
;     {[testenv]set_env}
;     # Workaround for https://github.com/python-poetry/poetry/issues/6958
;     POETRY_INSTALLER_PARALLEL = false
; pass_env =
;     {[testenv]pass_env}
;     CI
; commands =
;     poetry install --with integration
;     poetry run pytest -vv --tb native --log-cli-level=INFO -s {posargs} {[vars]tests_path}/integration/{env:TESTFILE}

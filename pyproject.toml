# Copyright 2024 Canonical Ltd.
# See LICENSE file for licensing details.
[tool.poetry]
name = "kyuubi-k8s-operator"
version = "1.0"
description = "kyuubi-k8s-operator"
authors = []
package-mode = false

[tool.poetry.dependencies]
python = ">=3.10,<4.0"
ops = "^2.17.0"
# NOTE(boto): 1.36+ incompatible with minio because of MD5 checksum
boto3 = ">=1.28.0,<1.36"
lightkube = "^0.15.2"
psycopg2 = "^2.9.9"
tenacity = ">=8.0.1"
spark8t = ">=0.0.11"

[tool.poetry.group.charm-libs.dependencies]
ops = "^2.13.0"
poetry-core = "*"
# grafana_agent/v0/cos_agent.py requires pydantic <2
pydantic = "^1.10.17, <2"
# grafana, loki, prometheus
pyyaml = "^6.0.1"
# prometheus, loki
cosl = "^0.0.12"
# tls_certificates_interface/v1/tls_certificates.py
# tls_certificates lib uses a feature only available in cryptography >=42.0.5
cryptography = ">=42.0.5"
jsonschema = "*"

[tool.poetry.group.format]
optional = true

[tool.poetry.group.format.dependencies]
ruff = ">=0.10.0"

[tool.poetry.group.lint]
optional = true

[tool.poetry.group.lint.dependencies]
ruff = ">=0.10.0"
codespell = ">=2.2.2"

[tool.poetry.group.unit]
optional = true

[tool.poetry.group.unit.dependencies]
pytest = ">=7.2"
pytest-asyncio = ">0.20.0"
coverage = { extras = ["toml"], version = ">7.0" }
ops = { version = "^2.17.0", extras = ["testing"] }

[tool.poetry.group.integration]
optional = true

[tool.poetry.group.integration.dependencies]
pytest = ">=7.2"
juju = "^3.1.6"
coverage = { extras = ["toml"], version = ">7.0" }
pytest-operator = ">0.20"
# NOTE(boto): 1.36+ incompatible with minio because of MD5 checksum
boto3 = ">=1.28.0,<1.36"
tenacity = "^8.2.2"
spark-k8s-test = "^0.0.2"

[tool.ruff]
line-length = 99
extend-exclude = ["__pycache__", "*.egg_info"]
target-version = "py310"
src = ["src", "tests"]

[tool.ruff.lint]
select = ["E", "W", "F", "C", "N", "D", "I001"]
ignore = ["E501", "D107"]
per-file-ignores = { "tests/*" = ["D100", "D101", "D102", "D103", "D104", "E999"], "src/literals.py" = ["D101"] }
extend-ignore = [
  "D203",
  "D204",
  "D213",
  "D215",
  "D400",
  "D401",
  "D404",
  "D406",
  "D407",
  "D408",
  "D409",
  "D413",
]
mccabe.max-complexity = 10

# Testing tools configuration
[tool.coverage.run]
branch = true

[tool.coverage.report]
show_missing = true

[tool.pytest.ini_options]
minversion = "6.0"
log_cli_level = "INFO"
asyncio_mode = "auto"
markers = ["unstable"]

[tool.pyright]
include = ["src"]
extraPaths = ["./lib", "src"]
pythonVersion = "3.10"
pythonPlatform = "All"
typeCheckingMode = "basic"
reportIncompatibleMethodOverride = false
reportImportCycles = false
reportMissingModuleSource = true
stubPath = ""
